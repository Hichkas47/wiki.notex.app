"use strict";(self.webpackChunkwiki_notex_app=self.webpackChunkwiki_notex_app||[]).push([[910],{7298:(t,e,r)=>{r.d(e,{Zo:()=>m,kt:()=>k});var a=r(300);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function u(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},l=Object.keys(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var p=a.createContext({}),d=function(t){var e=a.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},m=function(t){var e=d(t.components);return a.createElement(p.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},o=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,l=t.originalType,p=t.parentName,m=u(t,["components","mdxType","originalType","parentName"]),o=d(r),k=n,c=o["".concat(p,".").concat(k)]||o[k]||s[k]||l;return r?a.createElement(c,i(i({ref:e},m),{},{components:r})):a.createElement(c,i({ref:e},m))}));function k(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=r.length,i=new Array(l);i[0]=o;var u={};for(var p in e)hasOwnProperty.call(e,p)&&(u[p]=e[p]);u.originalType=t,u.mdxType="string"==typeof t?t:n,i[1]=u;for(var d=2;d<l;d++)i[d]=r[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}o.displayName="MDXCreateElement"},273:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var a=r(345),n=(r(300),r(7298));const l={sidebar_position:2,description:"Details about RPKG, the file format used by Glacier 2."},i="RPKG",u={unversionedId:"glacier2/rpkg",id:"glacier2/rpkg",title:"RPKG",description:"Details about RPKG, the file format used by Glacier 2.",source:"@site/docs/glacier2/rpkg.md",sourceDirName:"glacier2",slug:"/glacier2/rpkg",permalink:"/glacier2/rpkg",draft:!1,editUrl:"https://github.com/glacier-modding/wiki.notex.app/blob/main/docs/glacier2/rpkg.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Details about RPKG, the file format used by Glacier 2."},sidebar:"tutorialSidebar",previous:{title:"File Formats",permalink:"/glacier2/fileformats"},next:{title:"Glacier 2 Modding Basics",permalink:"/glacier2/modding_basics"}},p={},d=[{value:"HITMAN 3",id:"hitman-3",level:3},{value:"Base archive structure",id:"base-archive-structure",level:4},{value:"resource data table, per entry:",id:"resource-data-table-per-entry",level:5},{value:"resource meta data table, per entry:",id:"resource-meta-data-table-per-entry",level:5},{value:"if the resource references table size is &gt; 0 and there are hash references",id:"if-the-resource-references-table-size-is--0-and-there-are-hash-references",level:5},{value:"reference flags, per entry:",id:"reference-flags-per-entry",level:5},{value:"reference RuntimeIDs, per entry:",id:"reference-runtimeids-per-entry",level:5},{value:"Patch archive structure",id:"patch-archive-structure",level:4},{value:"patch entries (if patch deletion entry count &gt; 0):",id:"patch-entries-if-patch-deletion-entry-count--0",level:5},{value:"resource data table, per entry:",id:"resource-data-table-per-entry-1",level:5},{value:"resource meta data table, per entry:",id:"resource-meta-data-table-per-entry-1",level:5},{value:"if the resource references table size is &gt; 0 and there are hash references",id:"if-the-resource-references-table-size-is--0-and-there-are-hash-references-1",level:5},{value:"reference flags, per entry:",id:"reference-flags-per-entry-1",level:5},{value:"reference RuntimeIDs, per entry:",id:"reference-runtimeids-per-entry-1",level:5}],m={toc:d};function s(t){let{components:e,...r}=t;return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"rpkg"},"RPKG"),(0,n.kt)("p",null,"RPKGs (Resource Packages) are the archive format Glacier 2 Engine games use."),(0,n.kt)("h3",{id:"hitman-3"},"HITMAN 3"),(0,n.kt)("h4",{id:"base-archive-structure"},"Base archive structure"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"2KPR")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"unknown (always seems to be 0x1)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"chunk number")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"unknown (always seems to be 0x0)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"chunk patch number")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"unknown (always seems to be 0x78)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"unknown (always seems to be 0x78)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource data table size")))),(0,n.kt)("h5",{id:"resource-data-table-per-entry"},"resource data table, per entry:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint64_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource hash value (runtimeID)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint64_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource data offset")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource (compressed) data size")))),(0,n.kt)("h5",{id:"resource-meta-data-table-per-entry"},"resource meta data table, per entry:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"unsigned char","[4]"),(0,n.kt)("td",{parentName:"tr",align:null},"type extension")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource references table size")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource states table size (unused)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource (uncompressed) size final")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource size requirement inside memory")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource size requirement inside video memory")))),(0,n.kt)("h5",{id:"if-the-resource-references-table-size-is--0-and-there-are-hash-references"},"if the resource references table size is > 0 and there are hash references"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource reference count")))),(0,n.kt)("h5",{id:"reference-flags-per-entry"},"reference flags, per entry:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"reference's flag")))),(0,n.kt)("h5",{id:"reference-runtimeids-per-entry"},"reference RuntimeIDs, per entry:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint64_t"),(0,n.kt)("td",{parentName:"tr",align:null},"reference's runtimeID")))),(0,n.kt)("h4",{id:"patch-archive-structure"},"Patch archive structure"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"2KPR")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"unknown (always seems to be 0x1)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"chunk number")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"unknown (always seems to be 0x0)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"chunk patch number")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"unknown (always seems to be 0x78)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"unknown (always seems to be 0x78)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource count")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource data table size")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"patch deletion entry count")))),(0,n.kt)("h5",{id:"patch-entries-if-patch-deletion-entry-count--0"},"patch entries (if patch deletion entry count > 0):"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint64_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource hash value (runtimeID)")))),(0,n.kt)("h5",{id:"resource-data-table-per-entry-1"},"resource data table, per entry:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint64_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource hash value (runtimeID)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint64_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource data offset")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource (compressed) data size")))),(0,n.kt)("h5",{id:"resource-meta-data-table-per-entry-1"},"resource meta data table, per entry:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"unsigned char","[4]"),(0,n.kt)("td",{parentName:"tr",align:null},"type extension")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource references table size")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource states table size (unused)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource (uncompressed) size final")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource size requirement inside memory")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource size requirement inside video memory")))),(0,n.kt)("h5",{id:"if-the-resource-references-table-size-is--0-and-there-are-hash-references-1"},"if the resource references table size is > 0 and there are hash references"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,n.kt)("td",{parentName:"tr",align:null},"resource reference count")))),(0,n.kt)("h5",{id:"reference-flags-per-entry-1"},"reference flags, per entry:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,n.kt)("td",{parentName:"tr",align:null},"reference's flag")))),(0,n.kt)("h5",{id:"reference-runtimeids-per-entry-1"},"reference RuntimeIDs, per entry:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"uint64_t"),(0,n.kt)("td",{parentName:"tr",align:null},"reference's runtimeID")))))}s.isMDXComponent=!0}}]);