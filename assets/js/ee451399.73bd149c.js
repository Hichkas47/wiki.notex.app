(self.webpackChunkwiki_notex_app=self.webpackChunkwiki_notex_app||[]).push([[602],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var p=r.createContext({}),s=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},f={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},l=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,p=t.parentName,u=c(t,["components","mdxType","originalType","parentName"]),l=s(n),m=o,d=l["".concat(p,".").concat(m)]||l[m]||f[m]||i;return n?r.createElement(d,a(a({ref:e},u),{},{components:n})):r.createElement(d,a({ref:e},u))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=l;var c={};for(var p in e)hasOwnProperty.call(e,p)&&(c[p]=e[p]);c.originalType=t,c.mdxType="string"==typeof t?t:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}l.displayName="MDXCreateElement"},8786:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return l}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),a=["components"],c={sidebar_position:1},p="Information",s={unversionedId:"hitmandb/information",id:"hitmandb/information",isDocsHomePage:!1,title:"Information",description:"HitmanDB is a visual UI used to search through the hash list made for the Hitman: World of Assassination Trilogy (PC).",source:"@site/docs/hitmandb/information.md",sourceDirName:"hitmandb",slug:"/hitmandb/information",permalink:"/hitmandb/information",editUrl:"https://github.com/glacier-modding/wiki.notex.app/blob/main/docs/hitmandb/information.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Extracting files",permalink:"/rpkg/cli/extracting"},next:{title:"API",permalink:"/hitmandb/api"}},u=[],f={toc:u};function l(t){var e=t.components,n=(0,o.Z)(t,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"information"},"Information"),(0,i.kt)("p",null,"HitmanDB is a visual UI used to search through the hash list made for the Hitman: World of Assassination Trilogy (PC).",(0,i.kt)("br",{parentName:"p"}),"\n","It provides a way to search for hashes and their corresponding strings (if known) and vice versa.",(0,i.kt)("br",{parentName:"p"}),"\n","It can be found @ ",(0,i.kt)("a",{parentName:"p",href:"https://hitmandb.notex.app/"},"https://hitmandb.notex.app/")),(0,i.kt)("p",null,"You can also interface with it via an API, documentation can be found ",(0,i.kt)("a",{parentName:"p",href:"api"},"here"),"."))}l.isMDXComponent=!0}}]);